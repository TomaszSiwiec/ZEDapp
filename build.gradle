buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.moowork.gradle:gradle-node-plugin:1.2.0'
    }
}
apply plugin: 'base'
apply plugin: 'com.moowork.node' // gradle-node-plugin

version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.SR3")
}

dependencies {

}

subprojects {
    wrapper {
        gradleVersion = '6.3'
        distributionType = Wrapper.DistributionType.BIN // Change to All if you want to have also source code and doc
    }
}


node {
    /* gradle-node-plugin configuration
       https://github.com/srs/gradle-node-plugin/blob/master/docs/node.md
       Task name pattern:
       ./gradlew npm_<command> Executes an NPM command.
    */
    // Version of node to use.
    version = '10.14.1'
    // Version of npm to use.
    npmVersion = '6.4.1'
    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true
}

task cleanGUI(type: Delete) {
    group = 'build'
    delete 'frontend/build'
}
tasks.clean.mustRunAfter tasks.cleanGUI

task npmCi(type: NpmTask, dependsOn: npmSetup) {
    group = 'node'
    npmCommand = ["ci"]
    inputs.file("${project.projectDir}/frontend/package.json")
    inputs.file("${project.projectDir}/frontend/package-lock.json")
    outputs.dir("node_modules")
}

task buildGUI(type: NpmTask) {
    group = 'build'
    args = ['run-script', 'buildprod']
}
tasks.build.mustRunAfter tasks.buildGUI
tasks.buildGUI.mustRunAfter tasks.npmCi
tasks.buildGUI.mustRunAfter tasks.npmInstall
tasks.buildGUI.mustRunAfter tasks.cleanGUI